#!/bin/bash

APP="snafu"
IMG_VER="0.1"

ROOT="$(realpath `dirname $0`)"
SCRIPTS="${ROOT}/container_scripts"
SRC="${ROOT}/src"
USER="user"

# pass in any args to append to the docker command; these are
# literal, so if you intent to run a command inside of the container,
# you may need 'to use quotes'.
function _run_container() {
  # passing in "" to run the default CMD causes it to not
  # execute; instead we need to build the command, then
  # explicitly exclude it.
  local cmd=(
    docker run --rm -it
    -e DISPLAY=$DISPLAY
    -v /tmp/.X11-unix:/tmp/.X11-unix
    -v "${SCRIPTS}":/scripts
    -v "${SRC}":"/home/${USER}/.config/qtile"
    --name "${APP}"
    snafu:${IMG_VER}
  )

  (( ${#@} > 0 )) && cmd+=($@) # can pass any args

  "${cmd[@]}"
}

function _build_docker() {
  docker build -t ${APP}:${IMG_VER} "${ROOT}"
}

function _help() {
  cat << EOF
Usage: `basename $0` COMMAND

  r,run               run Qtile in Xephyr
  i,interactive       run and interactive shell (basb)
  b,build             build the Docker image
  h,help,-h,--help    display this help menu

EOF
}

case "$1" in
  r|run) _run_container;; # default command
  i|interactive) _run_container "bash";;
  b|build) _build_docker;;
  h|help|-h|--help) _help;;
  *) echo -e "Unknown command '$1'\n"; _help;;
esac
